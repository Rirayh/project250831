datasets=[
    dict(abbr='mmlu_pro_math',
        category='math',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_physics',
        category='physics',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_chemistry',
        category='chemistry',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_law',
        category='law',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_engineering',
        category='engineering',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_other',
        category='other',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_economics',
        category='economics',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_health',
        category='health',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_psychology',
        category='psychology',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_business',
        category='business',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_biology',
        category='biology',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_philosophy',
        category='philosophy',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_computer_science',
        category='computer science',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    dict(abbr='mmlu_pro_history',
        category='history',
        eval_cfg=dict(
            evaluator=dict(
                type='opencompass.openicl.icl_evaluator.AccEvaluator'),
            pred_postprocessor=dict(
                answer_pattern='(?i)ANSWER\\s*:\\s*([A-P])',
                type='opencompass.utils.text_postprocessors.match_answer_pattern')),
        infer_cfg=dict(
            inferencer=dict(
                type='opencompass.openicl.icl_inferencer.GenInferencer'),
            prompt_template=dict(
                template=dict(
                    round=[
                        dict(prompt="Answer the following multiple choice question. The last line of your response should be of the following format: 'ANSWER: $LETTER' (without quotes) where LETTER is one of Options(e.g. one of ABCDEFGHIJKLMNOP). Think step by step before answering.\n\nQuestion:\n\n{question}\n\nOptions:\n\n{options_str}",
                            role='HUMAN'),
                        ]),
                type='opencompass.openicl.icl_prompt_template.PromptTemplate'),
            retriever=dict(
                type='opencompass.openicl.icl_retriever.ZeroRetriever')),
        path='opencompass/mmlu_pro',
        reader_cfg=dict(
            input_columns=[
                'question',
                'cot_content',
                'options_str',
                ],
            output_column='answer',
            test_split='test',
            train_split='validation'),
        type='opencompass.datasets.MMLUProDataset'),
    ]
models=[
    dict(abbr='qwen2.5-7b-instruct-hf',
        batch_size=1,
        max_out_len=4096,
        path='Qwen/Qwen2.5-7B-Instruct',
        run_cfg=dict(
            num_gpus=1),
        type='opencompass.models.HuggingFacewithChatTemplate'),
    ]
summarizer=dict(
    summary_groups=[
        ])
work_dir='outputs/default/20250831_180316'